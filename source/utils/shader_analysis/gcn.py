# Copyright (c) 2017 Advanced Micro Devices, Inc. All rights reserved.
#  
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#  
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#  
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

from enum import Enum
from shae import OpCode, InstructionFlags

class InstructionClass(Enum):
    DS = 0
    EXP = 1
    FLAT = 2
    MIMG = 3
    MTBUF = 4
    MUBUF = 5
    SMEM = 6
    SOP1 = 7
    SOP2 = 8
    SOPC = 9
    SOPK = 10
    SOPP = 11
    VINTRP = 12
    VOP1 = 13
    VOP2 = 14
    VOP3 = 15
    VOP3P = 16
    VOPC = 17
    Unknown = 18

opcodes = {
    'buffer_atomic_add' : OpCode ('buffer_atomic_add', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_add_x2' : OpCode ('buffer_atomic_add_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_and' : OpCode ('buffer_atomic_and', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_and_x2' : OpCode ('buffer_atomic_and_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_cmpswap' : OpCode ('buffer_atomic_cmpswap', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_cmpswap_x2' : OpCode ('buffer_atomic_cmpswap_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_dec' : OpCode ('buffer_atomic_dec', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_dec_x2' : OpCode ('buffer_atomic_dec_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_fcmpswap' : OpCode ('buffer_atomic_fcmpswap', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_fcmpswap_x2' : OpCode ('buffer_atomic_fcmpswap_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_fmax' : OpCode ('buffer_atomic_fmax', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_fmax_x2' : OpCode ('buffer_atomic_fmax_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_fmin' : OpCode ('buffer_atomic_fmin', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_fmin_x2' : OpCode ('buffer_atomic_fmin_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_inc' : OpCode ('buffer_atomic_inc', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_inc_x2' : OpCode ('buffer_atomic_inc_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_or' : OpCode ('buffer_atomic_or', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_or_x2' : OpCode ('buffer_atomic_or_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_rsub' : OpCode ('buffer_atomic_rsub', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_rsub_x2' : OpCode ('buffer_atomic_rsub_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_smax' : OpCode ('buffer_atomic_smax', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_smax_x2' : OpCode ('buffer_atomic_smax_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_smin' : OpCode ('buffer_atomic_smin', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_smin_x2' : OpCode ('buffer_atomic_smin_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_sub' : OpCode ('buffer_atomic_sub', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_sub_x2' : OpCode ('buffer_atomic_sub_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_swap' : OpCode ('buffer_atomic_swap', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_swap_x2' : OpCode ('buffer_atomic_swap_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_umax' : OpCode ('buffer_atomic_umax', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_umax_x2' : OpCode ('buffer_atomic_umax_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_umin' : OpCode ('buffer_atomic_umin', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_umin_x2' : OpCode ('buffer_atomic_umin_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_xor' : OpCode ('buffer_atomic_xor', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_atomic_xor_x2' : OpCode ('buffer_atomic_xor_x2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_dword' : OpCode ('buffer_load_dword', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_dwordx2' : OpCode ('buffer_load_dwordx2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_dwordx3' : OpCode ('buffer_load_dwordx3', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_dwordx4' : OpCode ('buffer_load_dwordx4', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_format_d16_hi_x' : OpCode ('buffer_load_format_d16_hi_x', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_format_d16_x' : OpCode ('buffer_load_format_d16_x', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_format_d16_xy' : OpCode ('buffer_load_format_d16_xy', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_format_d16_xyz' : OpCode ('buffer_load_format_d16_xyz', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_format_d16_xyzw' : OpCode ('buffer_load_format_d16_xyzw', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_format_x' : OpCode ('buffer_load_format_x', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_format_xy' : OpCode ('buffer_load_format_xy', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_format_xyz' : OpCode ('buffer_load_format_xyz', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_format_xyzw' : OpCode ('buffer_load_format_xyzw', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_sbyte' : OpCode ('buffer_load_sbyte', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_sbyte_d16' : OpCode ('buffer_load_sbyte_d16', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_sbyte_d16_hi' : OpCode ('buffer_load_sbyte_d16_hi', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_short_d16' : OpCode ('buffer_load_short_d16', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_short_d16_hi' : OpCode ('buffer_load_short_d16_hi', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_sshort' : OpCode ('buffer_load_sshort', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_ubyte' : OpCode ('buffer_load_ubyte', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_ubyte_d16' : OpCode ('buffer_load_ubyte_d16', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_ubyte_d16_hi' : OpCode ('buffer_load_ubyte_d16_hi', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_load_ushort' : OpCode ('buffer_load_ushort', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_store_byte' : OpCode ('buffer_store_byte', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_store_byte_d16_hi' : OpCode ('buffer_store_byte_d16_hi', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_store_dword' : OpCode ('buffer_store_dword', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_store_dwordx2' : OpCode ('buffer_store_dwordx2', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_store_dwordx3' : OpCode ('buffer_store_dwordx3', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_store_dwordx4' : OpCode ('buffer_store_dwordx4', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_store_format_d16_hi_x' : OpCode ('buffer_store_format_d16_hi_x', {}, {0, 1, 2, 3}, InstructionClass.MUBUF, 0, None),
    'buffer_store_format_d16_x' : OpCode ('buffer_store_format_d16_x', {}, {0, 1, 2, 3}, InstructionClass.MUBUF, 0, None),
    'buffer_store_format_d16_xy' : OpCode ('buffer_store_format_d16_xy', {}, {0, 1, 2, 3}, InstructionClass.MUBUF, 0, None),
    'buffer_store_format_d16_xyz' : OpCode ('buffer_store_format_d16_xyz', {}, {0, 1, 2, 3}, InstructionClass.MUBUF, 0, None),
    'buffer_store_format_d16_xyzw' : OpCode ('buffer_store_format_d16_xyzw', {}, {0, 1, 2, 3}, InstructionClass.MUBUF, 0, None),
    'buffer_store_format_x' : OpCode ('buffer_store_format_x', {}, {0, 1, 2, 3}, InstructionClass.MUBUF, 0, None),
    'buffer_store_format_xy' : OpCode ('buffer_store_format_xy', {}, {0, 1, 2, 3}, InstructionClass.MUBUF, 0, None),
    'buffer_store_format_xyz' : OpCode ('buffer_store_format_xyz', {}, {0, 1, 2, 3}, InstructionClass.MUBUF, 0, None),
    'buffer_store_format_xyzw' : OpCode ('buffer_store_format_xyzw', {}, {0, 1, 2, 3}, InstructionClass.MUBUF, 0, None),
    'buffer_store_lds_dword' : OpCode ('buffer_store_lds_dword', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_store_short' : OpCode ('buffer_store_short', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_store_short_d16_hi' : OpCode ('buffer_store_short_d16_hi', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_wbinvl1' : OpCode ('buffer_wbinvl1', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_wbinvl1_sc' : OpCode ('buffer_wbinvl1_sc', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'buffer_wbinvl1_vol' : OpCode ('buffer_wbinvl1_vol', {0}, {1, 2}, InstructionClass.MUBUF, 0, None),
    'ds_add_f32' : OpCode ('ds_add_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_add_rtn_f32' : OpCode ('ds_add_rtn_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_add_rtn_u32' : OpCode ('ds_add_rtn_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_add_rtn_u64' : OpCode ('ds_add_rtn_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_add_src2_f32' : OpCode ('ds_add_src2_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_add_src2_u32' : OpCode ('ds_add_src2_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_add_src2_u64' : OpCode ('ds_add_src2_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_add_u32' : OpCode ('ds_add_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_add_u64' : OpCode ('ds_add_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_and_b32' : OpCode ('ds_and_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_and_b64' : OpCode ('ds_and_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_and_rtn_b32' : OpCode ('ds_and_rtn_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_and_rtn_b64' : OpCode ('ds_and_rtn_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_and_src2_b32' : OpCode ('ds_and_src2_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_and_src2_b64' : OpCode ('ds_and_src2_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_append' : OpCode ('ds_append', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_bpermute_b32' : OpCode ('ds_bpermute_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_cmpst_b32' : OpCode ('ds_cmpst_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_cmpst_b64' : OpCode ('ds_cmpst_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_cmpst_f32' : OpCode ('ds_cmpst_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_cmpst_f64' : OpCode ('ds_cmpst_f64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_cmpst_rtn_b32' : OpCode ('ds_cmpst_rtn_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_cmpst_rtn_b64' : OpCode ('ds_cmpst_rtn_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_cmpst_rtn_f32' : OpCode ('ds_cmpst_rtn_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_cmpst_rtn_f64' : OpCode ('ds_cmpst_rtn_f64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_condxchg32_rtn_b128' : OpCode ('ds_condxchg32_rtn_b128', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_condxchg32_rtn_b64' : OpCode ('ds_condxchg32_rtn_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_consume' : OpCode ('ds_consume', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_dec_rtn_u32' : OpCode ('ds_dec_rtn_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_dec_rtn_u64' : OpCode ('ds_dec_rtn_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_dec_src2_u32' : OpCode ('ds_dec_src2_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_dec_src2_u64' : OpCode ('ds_dec_src2_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_dec_u32' : OpCode ('ds_dec_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_dec_u64' : OpCode ('ds_dec_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_gws_barrier' : OpCode ('ds_gws_barrier', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_gws_init' : OpCode ('ds_gws_init', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_gws_sema_br' : OpCode ('ds_gws_sema_br', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_gws_sema_p' : OpCode ('ds_gws_sema_p', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_gws_sema_release_all' : OpCode ('ds_gws_sema_release_all', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_gws_sema_v' : OpCode ('ds_gws_sema_v', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_inc_rtn_u32' : OpCode ('ds_inc_rtn_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_inc_rtn_u64' : OpCode ('ds_inc_rtn_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_inc_src2_u32' : OpCode ('ds_inc_src2_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_inc_src2_u64' : OpCode ('ds_inc_src2_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_inc_u32' : OpCode ('ds_inc_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_inc_u64' : OpCode ('ds_inc_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_f32' : OpCode ('ds_max_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_f64' : OpCode ('ds_max_f64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_i32' : OpCode ('ds_max_i32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_i64' : OpCode ('ds_max_i64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_rtn_f32' : OpCode ('ds_max_rtn_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_rtn_f64' : OpCode ('ds_max_rtn_f64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_rtn_i32' : OpCode ('ds_max_rtn_i32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_rtn_i64' : OpCode ('ds_max_rtn_i64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_rtn_u32' : OpCode ('ds_max_rtn_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_rtn_u64' : OpCode ('ds_max_rtn_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_src2_f32' : OpCode ('ds_max_src2_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_src2_f64' : OpCode ('ds_max_src2_f64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_src2_i32' : OpCode ('ds_max_src2_i32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_src2_i64' : OpCode ('ds_max_src2_i64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_src2_u32' : OpCode ('ds_max_src2_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_src2_u64' : OpCode ('ds_max_src2_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_u32' : OpCode ('ds_max_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_max_u64' : OpCode ('ds_max_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_f32' : OpCode ('ds_min_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_f64' : OpCode ('ds_min_f64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_i32' : OpCode ('ds_min_i32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_i64' : OpCode ('ds_min_i64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_rtn_f32' : OpCode ('ds_min_rtn_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_rtn_f64' : OpCode ('ds_min_rtn_f64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_rtn_i32' : OpCode ('ds_min_rtn_i32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_rtn_i64' : OpCode ('ds_min_rtn_i64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_rtn_u32' : OpCode ('ds_min_rtn_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_rtn_u64' : OpCode ('ds_min_rtn_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_src2_f32' : OpCode ('ds_min_src2_f32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_src2_f64' : OpCode ('ds_min_src2_f64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_src2_i32' : OpCode ('ds_min_src2_i32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_src2_i64' : OpCode ('ds_min_src2_i64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_src2_u32' : OpCode ('ds_min_src2_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_src2_u64' : OpCode ('ds_min_src2_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_u32' : OpCode ('ds_min_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_min_u64' : OpCode ('ds_min_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_mskor_b32' : OpCode ('ds_mskor_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_mskor_b64' : OpCode ('ds_mskor_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_mskor_rtn_b32' : OpCode ('ds_mskor_rtn_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_mskor_rtn_b64' : OpCode ('ds_mskor_rtn_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_nop' : OpCode ('ds_nop', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_or_b32' : OpCode ('ds_or_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_or_b64' : OpCode ('ds_or_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_or_rtn_b32' : OpCode ('ds_or_rtn_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_or_rtn_b64' : OpCode ('ds_or_rtn_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_or_src2_b32' : OpCode ('ds_or_src2_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_or_src2_b64' : OpCode ('ds_or_src2_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_ordered_count' : OpCode ('ds_ordered_count', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_permute_b32' : OpCode ('ds_permute_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read2_b32' : OpCode ('ds_read2_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read2_b64' : OpCode ('ds_read2_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read2st64_b32' : OpCode ('ds_read2st64_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read2st64_b64' : OpCode ('ds_read2st64_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_addtid_b32' : OpCode ('ds_read_addtid_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_b128' : OpCode ('ds_read_b128', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_b32' : OpCode ('ds_read_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_b64' : OpCode ('ds_read_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_b96' : OpCode ('ds_read_b96', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_i16' : OpCode ('ds_read_i16', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_i8' : OpCode ('ds_read_i8', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_i8_d16' : OpCode ('ds_read_i8_d16', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_i8_d16_hi' : OpCode ('ds_read_i8_d16_hi', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_u16' : OpCode ('ds_read_u16', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_u16_d16' : OpCode ('ds_read_u16_d16', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_u16_d16_hi' : OpCode ('ds_read_u16_d16_hi', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_u8' : OpCode ('ds_read_u8', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_u8_d16' : OpCode ('ds_read_u8_d16', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_read_u8_d16_hi' : OpCode ('ds_read_u8_d16_hi', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_rsub_rtn_u32' : OpCode ('ds_rsub_rtn_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_rsub_rtn_u64' : OpCode ('ds_rsub_rtn_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_rsub_src2_u32' : OpCode ('ds_rsub_src2_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_rsub_src2_u64' : OpCode ('ds_rsub_src2_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_rsub_u32' : OpCode ('ds_rsub_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_rsub_u64' : OpCode ('ds_rsub_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_sub_rtn_u32' : OpCode ('ds_sub_rtn_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_sub_rtn_u64' : OpCode ('ds_sub_rtn_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_sub_src2_u32' : OpCode ('ds_sub_src2_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_sub_src2_u64' : OpCode ('ds_sub_src2_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_sub_u32' : OpCode ('ds_sub_u32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_sub_u64' : OpCode ('ds_sub_u64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_swizzle_b32' : OpCode ('ds_swizzle_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_wrap_rtn_b32' : OpCode ('ds_wrap_rtn_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write2_b32' : OpCode ('ds_write2_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write2_b64' : OpCode ('ds_write2_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write2st64_b32' : OpCode ('ds_write2st64_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write2st64_b64' : OpCode ('ds_write2st64_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_addtid_b32' : OpCode ('ds_write_addtid_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_b128' : OpCode ('ds_write_b128', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_b16' : OpCode ('ds_write_b16', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_b16_d16_hi' : OpCode ('ds_write_b16_d16_hi', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_b32' : OpCode ('ds_write_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_b64' : OpCode ('ds_write_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_b8' : OpCode ('ds_write_b8', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_b8_d16_hi' : OpCode ('ds_write_b8_d16_hi', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_b96' : OpCode ('ds_write_b96', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_src2_b32' : OpCode ('ds_write_src2_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_write_src2_b64' : OpCode ('ds_write_src2_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_wrxchg2_rtn_b32' : OpCode ('ds_wrxchg2_rtn_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_wrxchg2_rtn_b64' : OpCode ('ds_wrxchg2_rtn_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_wrxchg2st64_rtn_b32' : OpCode ('ds_wrxchg2st64_rtn_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_wrxchg2st64_rtn_b64' : OpCode ('ds_wrxchg2st64_rtn_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_wrxchg_rtn_b32' : OpCode ('ds_wrxchg_rtn_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_wrxchg_rtn_b64' : OpCode ('ds_wrxchg_rtn_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_xor_b32' : OpCode ('ds_xor_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_xor_b64' : OpCode ('ds_xor_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_xor_rtn_b32' : OpCode ('ds_xor_rtn_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_xor_rtn_b64' : OpCode ('ds_xor_rtn_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_xor_src2_b32' : OpCode ('ds_xor_src2_b32', {0}, {1}, InstructionClass.DS, 0, None),
    'ds_xor_src2_b64' : OpCode ('ds_xor_src2_b64', {0}, {1}, InstructionClass.DS, 0, None),
    'exp' : OpCode ('exp', {}, {1, 2, 3, 4}, InstructionClass.EXP, 0, None),
    'flat_atomic_add' : OpCode ('flat_atomic_add', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_add_x2' : OpCode ('flat_atomic_add_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_and' : OpCode ('flat_atomic_and', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_and_x2' : OpCode ('flat_atomic_and_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_cmpswap' : OpCode ('flat_atomic_cmpswap', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_cmpswap_x2' : OpCode ('flat_atomic_cmpswap_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_dec' : OpCode ('flat_atomic_dec', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_dec_x2' : OpCode ('flat_atomic_dec_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_fcmpswap' : OpCode ('flat_atomic_fcmpswap', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_fcmpswap_x2' : OpCode ('flat_atomic_fcmpswap_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_fmax' : OpCode ('flat_atomic_fmax', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_fmax_x2' : OpCode ('flat_atomic_fmax_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_fmin' : OpCode ('flat_atomic_fmin', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_fmin_x2' : OpCode ('flat_atomic_fmin_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_inc' : OpCode ('flat_atomic_inc', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_inc_x2' : OpCode ('flat_atomic_inc_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_or' : OpCode ('flat_atomic_or', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_or_x2' : OpCode ('flat_atomic_or_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_smax' : OpCode ('flat_atomic_smax', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_smax_x2' : OpCode ('flat_atomic_smax_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_smin' : OpCode ('flat_atomic_smin', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_smin_x2' : OpCode ('flat_atomic_smin_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_sub' : OpCode ('flat_atomic_sub', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_sub_x2' : OpCode ('flat_atomic_sub_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_swap' : OpCode ('flat_atomic_swap', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_swap_x2' : OpCode ('flat_atomic_swap_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_umax' : OpCode ('flat_atomic_umax', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_umax_x2' : OpCode ('flat_atomic_umax_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_umin' : OpCode ('flat_atomic_umin', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_umin_x2' : OpCode ('flat_atomic_umin_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_xor' : OpCode ('flat_atomic_xor', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_atomic_xor_x2' : OpCode ('flat_atomic_xor_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_dword' : OpCode ('flat_load_dword', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_dwordx2' : OpCode ('flat_load_dwordx2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_dwordx3' : OpCode ('flat_load_dwordx3', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_dwordx4' : OpCode ('flat_load_dwordx4', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_sbyte' : OpCode ('flat_load_sbyte', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_sbyte_d16' : OpCode ('flat_load_sbyte_d16', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_sbyte_d16_hi' : OpCode ('flat_load_sbyte_d16_hi', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_short_d16' : OpCode ('flat_load_short_d16', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_short_d16_hi' : OpCode ('flat_load_short_d16_hi', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_sshort' : OpCode ('flat_load_sshort', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_ubyte' : OpCode ('flat_load_ubyte', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_ubyte_d16' : OpCode ('flat_load_ubyte_d16', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_ubyte_d16_hi' : OpCode ('flat_load_ubyte_d16_hi', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_load_ushort' : OpCode ('flat_load_ushort', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'flat_store_byte' : OpCode ('flat_store_byte', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'flat_store_byte_d16_hi' : OpCode ('flat_store_byte_d16_hi', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'flat_store_dword' : OpCode ('flat_store_dword', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'flat_store_dwordx2' : OpCode ('flat_store_dwordx2', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'flat_store_dwordx3' : OpCode ('flat_store_dwordx3', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'flat_store_dwordx4' : OpCode ('flat_store_dwordx4', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'flat_store_short' : OpCode ('flat_store_short', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'flat_store_short_d16_hi' : OpCode ('flat_store_short_d16_hi', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_add' : OpCode ('global_atomic_add', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_add_x2' : OpCode ('global_atomic_add_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_and' : OpCode ('global_atomic_and', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_and_x2' : OpCode ('global_atomic_and_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_cmpswap' : OpCode ('global_atomic_cmpswap', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_cmpswap_x2' : OpCode ('global_atomic_cmpswap_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_dec' : OpCode ('global_atomic_dec', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_dec_x2' : OpCode ('global_atomic_dec_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_inc' : OpCode ('global_atomic_inc', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_inc_x2' : OpCode ('global_atomic_inc_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_or' : OpCode ('global_atomic_or', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_or_x2' : OpCode ('global_atomic_or_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_smax' : OpCode ('global_atomic_smax', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_smax_x2' : OpCode ('global_atomic_smax_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_smin' : OpCode ('global_atomic_smin', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_smin_x2' : OpCode ('global_atomic_smin_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_sub' : OpCode ('global_atomic_sub', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_sub_x2' : OpCode ('global_atomic_sub_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_swap' : OpCode ('global_atomic_swap', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_swap_x2' : OpCode ('global_atomic_swap_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_umax' : OpCode ('global_atomic_umax', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_umax_x2' : OpCode ('global_atomic_umax_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_umin' : OpCode ('global_atomic_umin', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_umin_x2' : OpCode ('global_atomic_umin_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_xor' : OpCode ('global_atomic_xor', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_atomic_xor_x2' : OpCode ('global_atomic_xor_x2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_dword' : OpCode ('global_load_dword', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_dwordx2' : OpCode ('global_load_dwordx2', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_dwordx3' : OpCode ('global_load_dwordx3', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_dwordx4' : OpCode ('global_load_dwordx4', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_sbyte' : OpCode ('global_load_sbyte', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_sbyte_d16' : OpCode ('global_load_sbyte_d16', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_sbyte_d16_hi' : OpCode ('global_load_sbyte_d16_hi', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_short_d16' : OpCode ('global_load_short_d16', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_short_d16_hi' : OpCode ('global_load_short_d16_hi', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_sshort' : OpCode ('global_load_sshort', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_ubyte' : OpCode ('global_load_ubyte', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_ubyte_d16' : OpCode ('global_load_ubyte_d16', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_ubyte_d16_hi' : OpCode ('global_load_ubyte_d16_hi', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_load_ushort' : OpCode ('global_load_ushort', {0}, {1, 2}, InstructionClass.FLAT, 0, None),
    'global_store_byte' : OpCode ('global_store_byte', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'global_store_byte_d16_hi' : OpCode ('global_store_byte_d16_hi', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'global_store_dword' : OpCode ('global_store_dword', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'global_store_dwordx2' : OpCode ('global_store_dwordx2', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'global_store_dwordx3' : OpCode ('global_store_dwordx3', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'global_store_dwordx4' : OpCode ('global_store_dwordx4', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'global_store_short' : OpCode ('global_store_short', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'global_store_short_d16_hi' : OpCode ('global_store_short_d16_hi', {}, {0, 1, 2}, InstructionClass.FLAT, 0, None),
    'image_atomic_add' : OpCode ('image_atomic_add', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_and' : OpCode ('image_atomic_and', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_cmpswap' : OpCode ('image_atomic_cmpswap', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_dec' : OpCode ('image_atomic_dec', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_fcmpswap' : OpCode ('image_atomic_fcmpswap', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_fmax' : OpCode ('image_atomic_fmax', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_fmin' : OpCode ('image_atomic_fmin', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_inc' : OpCode ('image_atomic_inc', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_or' : OpCode ('image_atomic_or', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_rsub' : OpCode ('image_atomic_rsub', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_smax' : OpCode ('image_atomic_smax', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_smin' : OpCode ('image_atomic_smin', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_sub' : OpCode ('image_atomic_sub', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_swap' : OpCode ('image_atomic_swap', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_umax' : OpCode ('image_atomic_umax', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_umin' : OpCode ('image_atomic_umin', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_atomic_xor' : OpCode ('image_atomic_xor', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4' : OpCode ('image_gather4', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_b' : OpCode ('image_gather4_b', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_b_cl' : OpCode ('image_gather4_b_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_b_cl_o' : OpCode ('image_gather4_b_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_b_o' : OpCode ('image_gather4_b_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c' : OpCode ('image_gather4_c', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_b' : OpCode ('image_gather4_c_b', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_b_cl' : OpCode ('image_gather4_c_b_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_b_cl_o' : OpCode ('image_gather4_c_b_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_b_o' : OpCode ('image_gather4_c_b_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_cl' : OpCode ('image_gather4_c_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_cl_o' : OpCode ('image_gather4_c_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_l' : OpCode ('image_gather4_c_l', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_l_o' : OpCode ('image_gather4_c_l_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_lz' : OpCode ('image_gather4_c_lz', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_lz_o' : OpCode ('image_gather4_c_lz_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_c_o' : OpCode ('image_gather4_c_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_cl' : OpCode ('image_gather4_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_cl_o' : OpCode ('image_gather4_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_l' : OpCode ('image_gather4_l', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_l_o' : OpCode ('image_gather4_l_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_lz' : OpCode ('image_gather4_lz', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_lz_o' : OpCode ('image_gather4_lz_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4_o' : OpCode ('image_gather4_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4h' : OpCode ('image_gather4h', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather4h_pck' : OpCode ('image_gather4h_pck', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_gather8h_pck' : OpCode ('image_gather8h_pck', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_get_lod' : OpCode ('image_get_lod', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_get_resinfo' : OpCode ('image_get_resinfo', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_load' : OpCode ('image_load', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_load_mip' : OpCode ('image_load_mip', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_load_mip_pck' : OpCode ('image_load_mip_pck', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_load_mip_pck_sgn' : OpCode ('image_load_mip_pck_sgn', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_load_pck' : OpCode ('image_load_pck', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_load_pck_sgn' : OpCode ('image_load_pck_sgn', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_rsrc256' : OpCode ('image_rsrc256', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample' : OpCode ('image_sample', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_b' : OpCode ('image_sample_b', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_b_cl' : OpCode ('image_sample_b_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_b_cl_o' : OpCode ('image_sample_b_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_b_o' : OpCode ('image_sample_b_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c' : OpCode ('image_sample_c', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_b' : OpCode ('image_sample_c_b', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_b_cl' : OpCode ('image_sample_c_b_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_b_cl_o' : OpCode ('image_sample_c_b_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_b_o' : OpCode ('image_sample_c_b_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_cd' : OpCode ('image_sample_c_cd', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_cd_cl' : OpCode ('image_sample_c_cd_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_cd_cl_o' : OpCode ('image_sample_c_cd_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_cd_o' : OpCode ('image_sample_c_cd_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_cl' : OpCode ('image_sample_c_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_cl_o' : OpCode ('image_sample_c_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_d' : OpCode ('image_sample_c_d', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_d_cl' : OpCode ('image_sample_c_d_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_d_cl_o' : OpCode ('image_sample_c_d_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_d_o' : OpCode ('image_sample_c_d_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_l' : OpCode ('image_sample_c_l', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_l_o' : OpCode ('image_sample_c_l_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_lz' : OpCode ('image_sample_c_lz', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_lz_o' : OpCode ('image_sample_c_lz_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_c_o' : OpCode ('image_sample_c_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_cd' : OpCode ('image_sample_cd', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_cd_cl' : OpCode ('image_sample_cd_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_cd_cl_o' : OpCode ('image_sample_cd_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_cd_o' : OpCode ('image_sample_cd_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_cl' : OpCode ('image_sample_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_cl_o' : OpCode ('image_sample_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_d' : OpCode ('image_sample_d', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_d_cl' : OpCode ('image_sample_d_cl', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_d_cl_o' : OpCode ('image_sample_d_cl_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_d_o' : OpCode ('image_sample_d_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_l' : OpCode ('image_sample_l', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_l_o' : OpCode ('image_sample_l_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_lz' : OpCode ('image_sample_lz', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_lz_o' : OpCode ('image_sample_lz_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sample_o' : OpCode ('image_sample_o', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_sampler' : OpCode ('image_sampler', {0}, {1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_store' : OpCode ('image_store', {}, {0, 1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_store_mip' : OpCode ('image_store_mip', {}, {0, 1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_store_mip_pck' : OpCode ('image_store_mip_pck', {}, {0, 1, 2, 3}, InstructionClass.MIMG, 0, None),
    'image_store_pck' : OpCode ('image_store_pck', {}, {0, 1, 2, 3}, InstructionClass.MIMG, 0, None),
    's_abs_i32' : OpCode ('s_abs_i32', {}, {}, InstructionClass.SOP1, 0, None),
    's_absdiff_i32' : OpCode ('s_absdiff_i32', {}, {}, InstructionClass.SOP2, 0, None),
    's_add_i32' : OpCode ('s_add_i32', {}, {}, InstructionClass.SOP2, 0, None),
    's_add_u32' : OpCode ('s_add_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_addc_u32' : OpCode ('s_addc_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_addk_i32' : OpCode ('s_addk_i32', {}, {}, InstructionClass.SOPK, 0, None),
    's_and_b32' : OpCode ('s_and_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_and_b64' : OpCode ('s_and_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_and_saveexec_b64' : OpCode ('s_and_saveexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_andn1_saveexec_b64' : OpCode ('s_andn1_saveexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_andn1_wrexec_b64' : OpCode ('s_andn1_wrexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_andn2_b32' : OpCode ('s_andn2_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_andn2_b64' : OpCode ('s_andn2_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_andn2_saveexec_b64' : OpCode ('s_andn2_saveexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_andn2_wrexec_b64' : OpCode ('s_andn2_wrexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_ashr_i32' : OpCode ('s_ashr_i32', {}, {}, InstructionClass.SOP2, 0, None),
    's_ashr_i64' : OpCode ('s_ashr_i64', {}, {}, InstructionClass.SOP2, 0, None),
    's_atc_probe' : OpCode ('s_atc_probe', {}, {}, InstructionClass.SMEM, 0, None),
    's_atc_probe_buffer' : OpCode ('s_atc_probe_buffer', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_add' : OpCode ('s_atomic_add', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_add_x2' : OpCode ('s_atomic_add_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_and' : OpCode ('s_atomic_and', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_and_x2' : OpCode ('s_atomic_and_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_cmpswap' : OpCode ('s_atomic_cmpswap', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_cmpswap_x2' : OpCode ('s_atomic_cmpswap_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_dec' : OpCode ('s_atomic_dec', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_dec_x2' : OpCode ('s_atomic_dec_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_inc' : OpCode ('s_atomic_inc', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_inc_x2' : OpCode ('s_atomic_inc_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_or' : OpCode ('s_atomic_or', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_or_x2' : OpCode ('s_atomic_or_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_smax' : OpCode ('s_atomic_smax', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_smax_x2' : OpCode ('s_atomic_smax_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_smin' : OpCode ('s_atomic_smin', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_smin_x2' : OpCode ('s_atomic_smin_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_sub' : OpCode ('s_atomic_sub', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_sub_x2' : OpCode ('s_atomic_sub_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_swap' : OpCode ('s_atomic_swap', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_swap_x2' : OpCode ('s_atomic_swap_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_umax' : OpCode ('s_atomic_umax', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_umax_x2' : OpCode ('s_atomic_umax_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_umin' : OpCode ('s_atomic_umin', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_umin_x2' : OpCode ('s_atomic_umin_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_xor' : OpCode ('s_atomic_xor', {}, {}, InstructionClass.SMEM, 0, None),
    's_atomic_xor_x2' : OpCode ('s_atomic_xor_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_barrier' : OpCode ('s_barrier', {}, {}, InstructionClass.SOPP, 0, None),
    's_bcnt0_i32_b32' : OpCode ('s_bcnt0_i32_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_bcnt0_i32_b64' : OpCode ('s_bcnt0_i32_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_bcnt1_i32_b32' : OpCode ('s_bcnt1_i32_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_bcnt1_i32_b64' : OpCode ('s_bcnt1_i32_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_bfe_i32' : OpCode ('s_bfe_i32', {}, {}, InstructionClass.SOP2, 0, None),
    's_bfe_i64' : OpCode ('s_bfe_i64', {}, {}, InstructionClass.SOP2, 0, None),
    's_bfe_u32' : OpCode ('s_bfe_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_bfe_u64' : OpCode ('s_bfe_u64', {}, {}, InstructionClass.SOP2, 0, None),
    's_bfm_b32' : OpCode ('s_bfm_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_bfm_b64' : OpCode ('s_bfm_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_bitcmp0_b32' : OpCode ('s_bitcmp0_b32', {}, {}, InstructionClass.SOPC, 0, None),
    's_bitcmp0_b64' : OpCode ('s_bitcmp0_b64', {}, {}, InstructionClass.SOPC, 0, None),
    's_bitcmp1_b32' : OpCode ('s_bitcmp1_b32', {}, {}, InstructionClass.SOPC, 0, None),
    's_bitcmp1_b64' : OpCode ('s_bitcmp1_b64', {}, {}, InstructionClass.SOPC, 0, None),
    's_bitreplicate_b64_b32' : OpCode ('s_bitreplicate_b64_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_bitset0_b32' : OpCode ('s_bitset0_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_bitset0_b64' : OpCode ('s_bitset0_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_bitset1_b32' : OpCode ('s_bitset1_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_bitset1_b64' : OpCode ('s_bitset1_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_branch' : OpCode ('s_branch', {}, {}, InstructionClass.SOPP, InstructionFlags.Jump.value, None),
    's_brev_b32' : OpCode ('s_brev_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_brev_b64' : OpCode ('s_brev_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_buffer_atomic_add' : OpCode ('s_buffer_atomic_add', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_add_x2' : OpCode ('s_buffer_atomic_add_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_and' : OpCode ('s_buffer_atomic_and', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_and_x2' : OpCode ('s_buffer_atomic_and_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_cmpswap' : OpCode ('s_buffer_atomic_cmpswap', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_cmpswap_x2' : OpCode ('s_buffer_atomic_cmpswap_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_dec' : OpCode ('s_buffer_atomic_dec', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_dec_x2' : OpCode ('s_buffer_atomic_dec_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_inc' : OpCode ('s_buffer_atomic_inc', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_inc_x2' : OpCode ('s_buffer_atomic_inc_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_or' : OpCode ('s_buffer_atomic_or', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_or_x2' : OpCode ('s_buffer_atomic_or_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_smax' : OpCode ('s_buffer_atomic_smax', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_smax_x2' : OpCode ('s_buffer_atomic_smax_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_smin' : OpCode ('s_buffer_atomic_smin', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_smin_x2' : OpCode ('s_buffer_atomic_smin_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_sub' : OpCode ('s_buffer_atomic_sub', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_sub_x2' : OpCode ('s_buffer_atomic_sub_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_swap' : OpCode ('s_buffer_atomic_swap', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_swap_x2' : OpCode ('s_buffer_atomic_swap_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_umax' : OpCode ('s_buffer_atomic_umax', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_umax_x2' : OpCode ('s_buffer_atomic_umax_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_umin' : OpCode ('s_buffer_atomic_umin', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_umin_x2' : OpCode ('s_buffer_atomic_umin_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_xor' : OpCode ('s_buffer_atomic_xor', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_atomic_xor_x2' : OpCode ('s_buffer_atomic_xor_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_load_dword' : OpCode ('s_buffer_load_dword', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_load_dwordx16' : OpCode ('s_buffer_load_dwordx16', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_load_dwordx2' : OpCode ('s_buffer_load_dwordx2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_load_dwordx4' : OpCode ('s_buffer_load_dwordx4', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_load_dwordx8' : OpCode ('s_buffer_load_dwordx8', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_store_dword' : OpCode ('s_buffer_store_dword', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_store_dwordx2' : OpCode ('s_buffer_store_dwordx2', {}, {}, InstructionClass.SMEM, 0, None),
    's_buffer_store_dwordx4' : OpCode ('s_buffer_store_dwordx4', {}, {}, InstructionClass.SMEM, 0, None),
    's_call_b64' : OpCode ('s_call_b64', {}, {}, InstructionClass.SOPK, 0, None),
    's_cbranch_cdbgsys' : OpCode ('s_cbranch_cdbgsys', {}, {}, InstructionClass.SOPP, InstructionFlags.Branch.value, None),
    's_cbranch_cdbgsys_and_user' : OpCode ('s_cbranch_cdbgsys_and_user', {}, {}, InstructionClass.SOPP, InstructionFlags.Branch.value, None),
    's_cbranch_cdbgsys_or_user' : OpCode ('s_cbranch_cdbgsys_or_user', {}, {}, InstructionClass.SOPP, InstructionFlags.Branch.value, None),
    's_cbranch_cdbguser' : OpCode ('s_cbranch_cdbguser', {}, {}, InstructionClass.SOPP, InstructionFlags.Branch.value, None),
    's_cbranch_execnz' : OpCode ('s_cbranch_execnz', {}, {}, InstructionClass.SOPP, InstructionFlags.Branch.value, None),
    's_cbranch_execz' : OpCode ('s_cbranch_execz', {}, {}, InstructionClass.SOPP, InstructionFlags.Branch.value, None),
    's_cbranch_g_fork' : OpCode ('s_cbranch_g_fork', {}, {}, InstructionClass.SOP2, InstructionFlags.Branch.value, None),
    's_cbranch_i_fork' : OpCode ('s_cbranch_i_fork', {}, {}, InstructionClass.SOPK, InstructionFlags.Branch.value, None),
    's_cbranch_join' : OpCode ('s_cbranch_join', {}, {}, InstructionClass.SOP1, InstructionFlags.Branch.value, None),
    's_cbranch_scc0' : OpCode ('s_cbranch_scc0', {}, {}, InstructionClass.SOPP, InstructionFlags.Branch.value, None),
    's_cbranch_scc1' : OpCode ('s_cbranch_scc1', {}, {}, InstructionClass.SOPP, InstructionFlags.Branch.value, None),
    's_cbranch_vccnz' : OpCode ('s_cbranch_vccnz', {}, {}, InstructionClass.SOPP, InstructionFlags.Branch.value, None),
    's_cbranch_vccz' : OpCode ('s_cbranch_vccz', {}, {}, InstructionClass.SOPP, InstructionFlags.Branch.value, None),
    's_cmov_b32' : OpCode ('s_cmov_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_cmov_b64' : OpCode ('s_cmov_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_cmovk_i32' : OpCode ('s_cmovk_i32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmp_eq_i32' : OpCode ('s_cmp_eq_i32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_eq_u32' : OpCode ('s_cmp_eq_u32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_eq_u64' : OpCode ('s_cmp_eq_u64', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_ge_i32' : OpCode ('s_cmp_ge_i32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_ge_u32' : OpCode ('s_cmp_ge_u32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_gt_i32' : OpCode ('s_cmp_gt_i32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_gt_u32' : OpCode ('s_cmp_gt_u32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_le_i32' : OpCode ('s_cmp_le_i32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_le_u32' : OpCode ('s_cmp_le_u32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_lg_i32' : OpCode ('s_cmp_lg_i32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_lg_u32' : OpCode ('s_cmp_lg_u32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_lg_u64' : OpCode ('s_cmp_lg_u64', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_lt_i32' : OpCode ('s_cmp_lt_i32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmp_lt_u32' : OpCode ('s_cmp_lt_u32', {}, {}, InstructionClass.SOPC, 0, None),
    's_cmpk_eq_i32' : OpCode ('s_cmpk_eq_i32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_eq_u32' : OpCode ('s_cmpk_eq_u32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_ge_i32' : OpCode ('s_cmpk_ge_i32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_ge_u32' : OpCode ('s_cmpk_ge_u32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_gt_i32' : OpCode ('s_cmpk_gt_i32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_gt_u32' : OpCode ('s_cmpk_gt_u32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_le_i32' : OpCode ('s_cmpk_le_i32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_le_u32' : OpCode ('s_cmpk_le_u32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_lg_i32' : OpCode ('s_cmpk_lg_i32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_lg_u32' : OpCode ('s_cmpk_lg_u32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_lt_i32' : OpCode ('s_cmpk_lt_i32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cmpk_lt_u32' : OpCode ('s_cmpk_lt_u32', {}, {}, InstructionClass.SOPK, 0, None),
    's_cselect_b32' : OpCode ('s_cselect_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_cselect_b64' : OpCode ('s_cselect_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_dcache_discard' : OpCode ('s_dcache_discard', {}, {}, InstructionClass.SMEM, 0, None),
    's_dcache_discard_x2' : OpCode ('s_dcache_discard_x2', {}, {}, InstructionClass.SMEM, 0, None),
    's_dcache_inv' : OpCode ('s_dcache_inv', {}, {}, InstructionClass.SMEM, 0, None),
    's_dcache_inv_vol' : OpCode ('s_dcache_inv_vol', {}, {}, InstructionClass.SMEM, 0, None),
    's_dcache_wb' : OpCode ('s_dcache_wb', {}, {}, InstructionClass.SMEM, 0, None),
    's_dcache_wb_vol' : OpCode ('s_dcache_wb_vol', {}, {}, InstructionClass.SMEM, 0, None),
    's_decperflevel' : OpCode ('s_decperflevel', {}, {}, InstructionClass.SOPP, 0, None),
    's_endpgm' : OpCode ('s_endpgm', {}, {}, InstructionClass.SOPP, 0, None),
    's_endpgm_ordered_ps_done' : OpCode ('s_endpgm_ordered_ps_done', {}, {}, InstructionClass.SOPP, 0, None),
    's_endpgm_saved' : OpCode ('s_endpgm_saved', {}, {}, InstructionClass.SOPP, 0, None),
    's_ff0_i32_b32' : OpCode ('s_ff0_i32_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_ff0_i32_b64' : OpCode ('s_ff0_i32_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_ff1_i32_b32' : OpCode ('s_ff1_i32_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_ff1_i32_b64' : OpCode ('s_ff1_i32_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_flbit_i32' : OpCode ('s_flbit_i32', {}, {}, InstructionClass.SOP1, 0, None),
    's_flbit_i32_b32' : OpCode ('s_flbit_i32_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_flbit_i32_b64' : OpCode ('s_flbit_i32_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_flbit_i32_i64' : OpCode ('s_flbit_i32_i64', {}, {}, InstructionClass.SOP1, 0, None),
    's_getpc_b64' : OpCode ('s_getpc_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_getreg_b32' : OpCode ('s_getreg_b32', {}, {}, InstructionClass.SOPK, 0, None),
    's_getreg_regrd_b32' : OpCode ('s_getreg_regrd_b32', {}, {}, InstructionClass.SOPK, 0, None),
    's_icache_inv' : OpCode ('s_icache_inv', {}, {}, InstructionClass.SOPP, 0, None),
    's_incperflevel' : OpCode ('s_incperflevel', {}, {}, InstructionClass.SOPP, 0, None),
    's_load_dword' : OpCode ('s_load_dword', {}, {}, InstructionClass.SMEM, 0, None),
    's_load_dwordx16' : OpCode ('s_load_dwordx16', {}, {}, InstructionClass.SMEM, 0, None),
    's_load_dwordx2' : OpCode ('s_load_dwordx2', {}, {}, InstructionClass.SMEM, 0, None),
    's_load_dwordx4' : OpCode ('s_load_dwordx4', {}, {}, InstructionClass.SMEM, 0, None),
    's_load_dwordx8' : OpCode ('s_load_dwordx8', {}, {}, InstructionClass.SMEM, 0, None),
    's_lshl1_add_u32' : OpCode ('s_lshl1_add_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_lshl2_add_u32' : OpCode ('s_lshl2_add_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_lshl3_add_u32' : OpCode ('s_lshl3_add_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_lshl4_add_u32' : OpCode ('s_lshl4_add_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_lshl_b32' : OpCode ('s_lshl_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_lshl_b64' : OpCode ('s_lshl_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_lshr_b32' : OpCode ('s_lshr_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_lshr_b64' : OpCode ('s_lshr_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_max_i32' : OpCode ('s_max_i32', {}, {}, InstructionClass.SOP2, 0, None),
    's_max_u32' : OpCode ('s_max_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_memrealtime' : OpCode ('s_memrealtime', {}, {}, InstructionClass.SMEM, 0, None),
    's_memtime' : OpCode ('s_memtime', {}, {}, InstructionClass.SMEM, 0, None),
    's_min_i32' : OpCode ('s_min_i32', {}, {}, InstructionClass.SOP2, 0, None),
    's_min_u32' : OpCode ('s_min_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_mov_b32' : OpCode ('s_mov_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_mov_b64' : OpCode ('s_mov_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_mov_fed_b32' : OpCode ('s_mov_fed_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_mov_regrd_b32' : OpCode ('s_mov_regrd_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_movk_i32' : OpCode ('s_movk_i32', {}, {}, InstructionClass.SOPK, 0, None),
    's_movreld_b32' : OpCode ('s_movreld_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_movreld_b64' : OpCode ('s_movreld_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_movrels_b32' : OpCode ('s_movrels_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_movrels_b64' : OpCode ('s_movrels_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_mul_hi_i32' : OpCode ('s_mul_hi_i32', {}, {}, InstructionClass.SOP2, 0, None),
    's_mul_hi_u32' : OpCode ('s_mul_hi_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_mul_i32' : OpCode ('s_mul_i32', {}, {}, InstructionClass.SOP2, 0, None),
    's_mulk_i32' : OpCode ('s_mulk_i32', {}, {}, InstructionClass.SOPK, 0, None),
    's_nand_b32' : OpCode ('s_nand_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_nand_b64' : OpCode ('s_nand_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_nand_saveexec_b64' : OpCode ('s_nand_saveexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_nop' : OpCode ('s_nop', {}, {}, InstructionClass.SOPP, 0, None),
    's_nor_b32' : OpCode ('s_nor_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_nor_b64' : OpCode ('s_nor_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_nor_saveexec_b64' : OpCode ('s_nor_saveexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_not_b32' : OpCode ('s_not_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_not_b64' : OpCode ('s_not_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_or_b32' : OpCode ('s_or_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_or_b64' : OpCode ('s_or_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_or_saveexec_b64' : OpCode ('s_or_saveexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_orn1_saveexec_b64' : OpCode ('s_orn1_saveexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_orn2_b32' : OpCode ('s_orn2_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_orn2_b64' : OpCode ('s_orn2_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_orn2_saveexec_b64' : OpCode ('s_orn2_saveexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_pack_hh_b32_b16' : OpCode ('s_pack_hh_b32_b16', {}, {}, InstructionClass.SOP2, 0, None),
    's_pack_lh_b32_b16' : OpCode ('s_pack_lh_b32_b16', {}, {}, InstructionClass.SOP2, 0, None),
    's_pack_ll_b32_b16' : OpCode ('s_pack_ll_b32_b16', {}, {}, InstructionClass.SOP2, 0, None),
    's_quadmask_b32' : OpCode ('s_quadmask_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_quadmask_b64' : OpCode ('s_quadmask_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_rfe_b64' : OpCode ('s_rfe_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_rfe_restore_b64' : OpCode ('s_rfe_restore_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_scratch_load_dword' : OpCode ('s_scratch_load_dword', {}, {}, InstructionClass.SMEM, 0, None),
    's_scratch_load_dwordx2' : OpCode ('s_scratch_load_dwordx2', {}, {}, InstructionClass.SMEM, 0, None),
    's_scratch_load_dwordx4' : OpCode ('s_scratch_load_dwordx4', {}, {}, InstructionClass.SMEM, 0, None),
    's_scratch_store_dword' : OpCode ('s_scratch_store_dword', {}, {}, InstructionClass.SMEM, 0, None),
    's_scratch_store_dwordx2' : OpCode ('s_scratch_store_dwordx2', {}, {}, InstructionClass.SMEM, 0, None),
    's_scratch_store_dwordx4' : OpCode ('s_scratch_store_dwordx4', {}, {}, InstructionClass.SMEM, 0, None),
    's_sendmsg' : OpCode ('s_sendmsg', {}, {}, InstructionClass.SOPP, 0, None),
    's_sendmsghalt' : OpCode ('s_sendmsghalt', {}, {}, InstructionClass.SOPP, 0, None),
    's_set_gpr_idx_idx' : OpCode ('s_set_gpr_idx_idx', {}, {}, InstructionClass.SOP1, 0, None),
    's_set_gpr_idx_mode' : OpCode ('s_set_gpr_idx_mode', {}, {}, InstructionClass.SOPP, 0, None),
    's_set_gpr_idx_off' : OpCode ('s_set_gpr_idx_off', {}, {}, InstructionClass.SOPP, 0, None),
    's_set_gpr_idx_on' : OpCode ('s_set_gpr_idx_on', {}, {}, InstructionClass.SOPC, 0, None),
    's_sethalt' : OpCode ('s_sethalt', {}, {}, InstructionClass.SOPP, 0, None),
    's_setkill' : OpCode ('s_setkill', {}, {}, InstructionClass.SOPP, 0, None),
    's_setpc_b64' : OpCode ('s_setpc_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_setprio' : OpCode ('s_setprio', {}, {}, InstructionClass.SOPP, 0, None),
    's_setreg_b32' : OpCode ('s_setreg_b32', {}, {}, InstructionClass.SOPK, 0, None),
    's_setreg_imm32_b32' : OpCode ('s_setreg_imm32_b32', {}, {}, InstructionClass.SOPK, 0, None),
    's_setvskip' : OpCode ('s_setvskip', {}, {}, InstructionClass.SOPC, 0, None),
    's_sext_i32_i16' : OpCode ('s_sext_i32_i16', {}, {}, InstructionClass.SOP1, 0, None),
    's_sext_i32_i8' : OpCode ('s_sext_i32_i8', {}, {}, InstructionClass.SOP1, 0, None),
    's_sleep' : OpCode ('s_sleep', {}, {}, InstructionClass.SOPP, 0, None),
    's_store_dword' : OpCode ('s_store_dword', {}, {}, InstructionClass.SMEM, 0, None),
    's_store_dwordx2' : OpCode ('s_store_dwordx2', {}, {}, InstructionClass.SMEM, 0, None),
    's_store_dwordx4' : OpCode ('s_store_dwordx4', {}, {}, InstructionClass.SMEM, 0, None),
    's_sub_i32' : OpCode ('s_sub_i32', {}, {}, InstructionClass.SOP2, 0, None),
    's_sub_u32' : OpCode ('s_sub_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_subb_u32' : OpCode ('s_subb_u32', {}, {}, InstructionClass.SOP2, 0, None),
    's_swappc_b64' : OpCode ('s_swappc_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_trap' : OpCode ('s_trap', {}, {}, InstructionClass.SOPP, 0, None),
    's_ttracedata' : OpCode ('s_ttracedata', {}, {}, InstructionClass.SOPP, 0, None),
    's_waitcnt' : OpCode ('s_waitcnt', {}, {}, InstructionClass.SOPP, 0, None),
    's_wakeup' : OpCode ('s_wakeup', {}, {}, InstructionClass.SOPP, 0, None),
    's_wqm_b32' : OpCode ('s_wqm_b32', {}, {}, InstructionClass.SOP1, 0, None),
    's_wqm_b64' : OpCode ('s_wqm_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_xnor_b32' : OpCode ('s_xnor_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_xnor_b64' : OpCode ('s_xnor_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_xnor_saveexec_b64' : OpCode ('s_xnor_saveexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    's_xor_b32' : OpCode ('s_xor_b32', {}, {}, InstructionClass.SOP2, 0, None),
    's_xor_b64' : OpCode ('s_xor_b64', {}, {}, InstructionClass.SOP2, 0, None),
    's_xor_saveexec_b64' : OpCode ('s_xor_saveexec_b64', {}, {}, InstructionClass.SOP1, 0, None),
    'scratch_load_dword' : OpCode ('scratch_load_dword', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_dwordx2' : OpCode ('scratch_load_dwordx2', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_dwordx3' : OpCode ('scratch_load_dwordx3', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_dwordx4' : OpCode ('scratch_load_dwordx4', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_sbyte' : OpCode ('scratch_load_sbyte', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_sbyte_d16' : OpCode ('scratch_load_sbyte_d16', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_sbyte_d16_hi' : OpCode ('scratch_load_sbyte_d16_hi', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_short_d16' : OpCode ('scratch_load_short_d16', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_short_d16_hi' : OpCode ('scratch_load_short_d16_hi', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_sshort' : OpCode ('scratch_load_sshort', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_ubyte' : OpCode ('scratch_load_ubyte', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_ubyte_d16' : OpCode ('scratch_load_ubyte_d16', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_ubyte_d16_hi' : OpCode ('scratch_load_ubyte_d16_hi', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_load_ushort' : OpCode ('scratch_load_ushort', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_store_byte' : OpCode ('scratch_store_byte', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_store_byte_d16_hi' : OpCode ('scratch_store_byte_d16_hi', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_store_dword' : OpCode ('scratch_store_dword', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_store_dwordx2' : OpCode ('scratch_store_dwordx2', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_store_dwordx3' : OpCode ('scratch_store_dwordx3', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_store_dwordx4' : OpCode ('scratch_store_dwordx4', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_store_short' : OpCode ('scratch_store_short', {}, {}, InstructionClass.FLAT, 0, None),
    'scratch_store_short_d16_hi' : OpCode ('scratch_store_short_d16_hi', {}, {}, InstructionClass.FLAT, 0, None),
    'tbuffer_load_format_d16_x' : OpCode ('tbuffer_load_format_d16_x', {0}, {1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_load_format_d16_xy' : OpCode ('tbuffer_load_format_d16_xy', {0}, {1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_load_format_d16_xyz' : OpCode ('tbuffer_load_format_d16_xyz', {0}, {1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_load_format_d16_xyzw' : OpCode ('tbuffer_load_format_d16_xyzw', {0}, {1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_load_format_x' : OpCode ('tbuffer_load_format_x', {0}, {1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_load_format_xy' : OpCode ('tbuffer_load_format_xy', {0}, {1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_load_format_xyz' : OpCode ('tbuffer_load_format_xyz', {0}, {1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_load_format_xyzw' : OpCode ('tbuffer_load_format_xyzw', {0}, {1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_store_format_d16_x' : OpCode ('tbuffer_store_format_d16_x', {}, {0, 1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_store_format_d16_xy' : OpCode ('tbuffer_store_format_d16_xy', {}, {0, 1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_store_format_d16_xyz' : OpCode ('tbuffer_store_format_d16_xyz', {}, {0, 1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_store_format_d16_xyzw' : OpCode ('tbuffer_store_format_d16_xyzw', {}, {0, 1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_store_format_x' : OpCode ('tbuffer_store_format_x', {}, {0, 1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_store_format_xy' : OpCode ('tbuffer_store_format_xy', {}, {0, 1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_store_format_xyz' : OpCode ('tbuffer_store_format_xyz', {}, {0, 1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'tbuffer_store_format_xyzw' : OpCode ('tbuffer_store_format_xyzw', {}, {0, 1, 2, 3}, InstructionClass.MTBUF, 0, None),
    'v_add3_u32' : OpCode ('v_add3_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_add_co_u32' : OpCode ('v_add_co_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_add_f16' : OpCode ('v_add_f16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_add_f32' : OpCode ('v_add_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_add_f64' : OpCode ('v_add_f64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_add_i16' : OpCode ('v_add_i16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_add_i32' : OpCode ('v_add_i32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_add_lshl_u32' : OpCode ('v_add_lshl_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_add_u16' : OpCode ('v_add_u16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_add_u32' : OpCode ('v_add_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_addc_co_u32' : OpCode ('v_addc_co_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_addc_u32' : OpCode ('v_addc_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_alignbit_b32' : OpCode ('v_alignbit_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_alignbyte_b32' : OpCode ('v_alignbyte_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_and_b32' : OpCode ('v_and_b32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_and_or_b32' : OpCode ('v_and_or_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_ashr_i32' : OpCode ('v_ashr_i32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_ashr_i64' : OpCode ('v_ashr_i64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_ashrrev_i16' : OpCode ('v_ashrrev_i16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_ashrrev_i32' : OpCode ('v_ashrrev_i32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_ashrrev_i64' : OpCode ('v_ashrrev_i64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_bcnt_u32_b32' : OpCode ('v_bcnt_u32_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_bfe_i32' : OpCode ('v_bfe_i32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_bfe_u32' : OpCode ('v_bfe_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_bfi_b32' : OpCode ('v_bfi_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_bfm_b32' : OpCode ('v_bfm_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_bfrev_b32' : OpCode ('v_bfrev_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_ceil_f16' : OpCode ('v_ceil_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_ceil_f32' : OpCode ('v_ceil_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_ceil_f64' : OpCode ('v_ceil_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_clrexcp' : OpCode ('v_clrexcp', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cmp_class_f16' : OpCode ('v_cmp_class_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_class_f32' : OpCode ('v_cmp_class_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_class_f64' : OpCode ('v_cmp_class_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_eq_f16' : OpCode ('v_cmp_eq_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_eq_f32' : OpCode ('v_cmp_eq_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_eq_f64' : OpCode ('v_cmp_eq_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_eq_i16' : OpCode ('v_cmp_eq_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_eq_i32' : OpCode ('v_cmp_eq_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_eq_i64' : OpCode ('v_cmp_eq_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_eq_u16' : OpCode ('v_cmp_eq_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_eq_u32' : OpCode ('v_cmp_eq_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_eq_u64' : OpCode ('v_cmp_eq_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_f_f16' : OpCode ('v_cmp_f_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_f_f32' : OpCode ('v_cmp_f_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_f_f64' : OpCode ('v_cmp_f_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_f_i16' : OpCode ('v_cmp_f_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_f_i32' : OpCode ('v_cmp_f_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_f_i64' : OpCode ('v_cmp_f_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_f_u16' : OpCode ('v_cmp_f_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_f_u32' : OpCode ('v_cmp_f_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_f_u64' : OpCode ('v_cmp_f_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ge_f16' : OpCode ('v_cmp_ge_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ge_f32' : OpCode ('v_cmp_ge_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ge_f64' : OpCode ('v_cmp_ge_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ge_i16' : OpCode ('v_cmp_ge_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ge_i32' : OpCode ('v_cmp_ge_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ge_i64' : OpCode ('v_cmp_ge_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ge_u16' : OpCode ('v_cmp_ge_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ge_u32' : OpCode ('v_cmp_ge_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ge_u64' : OpCode ('v_cmp_ge_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_gt_f16' : OpCode ('v_cmp_gt_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_gt_f32' : OpCode ('v_cmp_gt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_gt_f64' : OpCode ('v_cmp_gt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_gt_i16' : OpCode ('v_cmp_gt_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_gt_i32' : OpCode ('v_cmp_gt_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_gt_i64' : OpCode ('v_cmp_gt_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_gt_u16' : OpCode ('v_cmp_gt_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_gt_u32' : OpCode ('v_cmp_gt_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_gt_u64' : OpCode ('v_cmp_gt_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_le_f16' : OpCode ('v_cmp_le_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_le_f32' : OpCode ('v_cmp_le_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_le_f64' : OpCode ('v_cmp_le_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_le_i16' : OpCode ('v_cmp_le_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_le_i32' : OpCode ('v_cmp_le_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_le_i64' : OpCode ('v_cmp_le_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_le_u16' : OpCode ('v_cmp_le_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_le_u32' : OpCode ('v_cmp_le_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_le_u64' : OpCode ('v_cmp_le_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lg_f16' : OpCode ('v_cmp_lg_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lg_f32' : OpCode ('v_cmp_lg_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lg_f64' : OpCode ('v_cmp_lg_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lt_f16' : OpCode ('v_cmp_lt_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lt_f32' : OpCode ('v_cmp_lt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lt_f64' : OpCode ('v_cmp_lt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lt_i16' : OpCode ('v_cmp_lt_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lt_i32' : OpCode ('v_cmp_lt_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lt_i64' : OpCode ('v_cmp_lt_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lt_u16' : OpCode ('v_cmp_lt_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lt_u32' : OpCode ('v_cmp_lt_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_lt_u64' : OpCode ('v_cmp_lt_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ne_i16' : OpCode ('v_cmp_ne_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ne_i32' : OpCode ('v_cmp_ne_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ne_i64' : OpCode ('v_cmp_ne_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ne_u16' : OpCode ('v_cmp_ne_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ne_u32' : OpCode ('v_cmp_ne_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ne_u64' : OpCode ('v_cmp_ne_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_neq_f16' : OpCode ('v_cmp_neq_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_neq_f32' : OpCode ('v_cmp_neq_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_neq_f64' : OpCode ('v_cmp_neq_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nge_f16' : OpCode ('v_cmp_nge_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nge_f32' : OpCode ('v_cmp_nge_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nge_f64' : OpCode ('v_cmp_nge_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ngt_f16' : OpCode ('v_cmp_ngt_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ngt_f32' : OpCode ('v_cmp_ngt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_ngt_f64' : OpCode ('v_cmp_ngt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nle_f16' : OpCode ('v_cmp_nle_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nle_f32' : OpCode ('v_cmp_nle_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nle_f64' : OpCode ('v_cmp_nle_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nlg_f16' : OpCode ('v_cmp_nlg_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nlg_f32' : OpCode ('v_cmp_nlg_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nlg_f64' : OpCode ('v_cmp_nlg_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nlt_f16' : OpCode ('v_cmp_nlt_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nlt_f32' : OpCode ('v_cmp_nlt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_nlt_f64' : OpCode ('v_cmp_nlt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_o_f16' : OpCode ('v_cmp_o_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_o_f32' : OpCode ('v_cmp_o_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_o_f64' : OpCode ('v_cmp_o_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_t_i16' : OpCode ('v_cmp_t_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_t_i32' : OpCode ('v_cmp_t_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_t_i64' : OpCode ('v_cmp_t_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_t_u16' : OpCode ('v_cmp_t_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_t_u32' : OpCode ('v_cmp_t_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_t_u64' : OpCode ('v_cmp_t_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_tru_f16' : OpCode ('v_cmp_tru_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_tru_f32' : OpCode ('v_cmp_tru_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_tru_f64' : OpCode ('v_cmp_tru_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_u_f16' : OpCode ('v_cmp_u_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_u_f32' : OpCode ('v_cmp_u_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmp_u_f64' : OpCode ('v_cmp_u_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_eq_f32' : OpCode ('v_cmps_eq_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_eq_f64' : OpCode ('v_cmps_eq_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_f_f32' : OpCode ('v_cmps_f_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_f_f64' : OpCode ('v_cmps_f_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_ge_f32' : OpCode ('v_cmps_ge_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_ge_f64' : OpCode ('v_cmps_ge_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_gt_f32' : OpCode ('v_cmps_gt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_gt_f64' : OpCode ('v_cmps_gt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_le_f32' : OpCode ('v_cmps_le_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_le_f64' : OpCode ('v_cmps_le_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_lg_f32' : OpCode ('v_cmps_lg_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_lg_f64' : OpCode ('v_cmps_lg_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_lt_f32' : OpCode ('v_cmps_lt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_lt_f64' : OpCode ('v_cmps_lt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_neq_f32' : OpCode ('v_cmps_neq_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_neq_f64' : OpCode ('v_cmps_neq_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_nge_f32' : OpCode ('v_cmps_nge_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_nge_f64' : OpCode ('v_cmps_nge_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_ngt_f32' : OpCode ('v_cmps_ngt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_ngt_f64' : OpCode ('v_cmps_ngt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_nle_f32' : OpCode ('v_cmps_nle_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_nle_f64' : OpCode ('v_cmps_nle_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_nlg_f32' : OpCode ('v_cmps_nlg_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_nlg_f64' : OpCode ('v_cmps_nlg_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_nlt_f32' : OpCode ('v_cmps_nlt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_nlt_f64' : OpCode ('v_cmps_nlt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_o_f32' : OpCode ('v_cmps_o_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_o_f64' : OpCode ('v_cmps_o_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_tru_f32' : OpCode ('v_cmps_tru_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_tru_f64' : OpCode ('v_cmps_tru_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_u_f32' : OpCode ('v_cmps_u_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmps_u_f64' : OpCode ('v_cmps_u_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_eq_f32' : OpCode ('v_cmpsx_eq_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_eq_f64' : OpCode ('v_cmpsx_eq_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_f_f32' : OpCode ('v_cmpsx_f_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_f_f64' : OpCode ('v_cmpsx_f_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_ge_f32' : OpCode ('v_cmpsx_ge_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_ge_f64' : OpCode ('v_cmpsx_ge_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_gt_f32' : OpCode ('v_cmpsx_gt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_gt_f64' : OpCode ('v_cmpsx_gt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_le_f32' : OpCode ('v_cmpsx_le_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_le_f64' : OpCode ('v_cmpsx_le_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_lg_f32' : OpCode ('v_cmpsx_lg_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_lg_f64' : OpCode ('v_cmpsx_lg_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_lt_f32' : OpCode ('v_cmpsx_lt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_lt_f64' : OpCode ('v_cmpsx_lt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_neq_f32' : OpCode ('v_cmpsx_neq_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_neq_f64' : OpCode ('v_cmpsx_neq_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_nge_f32' : OpCode ('v_cmpsx_nge_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_nge_f64' : OpCode ('v_cmpsx_nge_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_ngt_f32' : OpCode ('v_cmpsx_ngt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_ngt_f64' : OpCode ('v_cmpsx_ngt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_nle_f32' : OpCode ('v_cmpsx_nle_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_nle_f64' : OpCode ('v_cmpsx_nle_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_nlg_f32' : OpCode ('v_cmpsx_nlg_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_nlg_f64' : OpCode ('v_cmpsx_nlg_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_nlt_f32' : OpCode ('v_cmpsx_nlt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_nlt_f64' : OpCode ('v_cmpsx_nlt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_o_f32' : OpCode ('v_cmpsx_o_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_o_f64' : OpCode ('v_cmpsx_o_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_tru_f32' : OpCode ('v_cmpsx_tru_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_tru_f64' : OpCode ('v_cmpsx_tru_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_u_f32' : OpCode ('v_cmpsx_u_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpsx_u_f64' : OpCode ('v_cmpsx_u_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_class_f16' : OpCode ('v_cmpx_class_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_class_f32' : OpCode ('v_cmpx_class_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_class_f64' : OpCode ('v_cmpx_class_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_eq_f16' : OpCode ('v_cmpx_eq_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_eq_f32' : OpCode ('v_cmpx_eq_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_eq_f64' : OpCode ('v_cmpx_eq_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_eq_i16' : OpCode ('v_cmpx_eq_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_eq_i32' : OpCode ('v_cmpx_eq_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_eq_i64' : OpCode ('v_cmpx_eq_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_eq_u16' : OpCode ('v_cmpx_eq_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_eq_u32' : OpCode ('v_cmpx_eq_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_eq_u64' : OpCode ('v_cmpx_eq_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_f_f16' : OpCode ('v_cmpx_f_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_f_f32' : OpCode ('v_cmpx_f_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_f_f64' : OpCode ('v_cmpx_f_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_f_i16' : OpCode ('v_cmpx_f_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_f_i32' : OpCode ('v_cmpx_f_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_f_i64' : OpCode ('v_cmpx_f_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_f_u16' : OpCode ('v_cmpx_f_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_f_u32' : OpCode ('v_cmpx_f_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_f_u64' : OpCode ('v_cmpx_f_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ge_f16' : OpCode ('v_cmpx_ge_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ge_f32' : OpCode ('v_cmpx_ge_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ge_f64' : OpCode ('v_cmpx_ge_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ge_i16' : OpCode ('v_cmpx_ge_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ge_i32' : OpCode ('v_cmpx_ge_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ge_i64' : OpCode ('v_cmpx_ge_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ge_u16' : OpCode ('v_cmpx_ge_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ge_u32' : OpCode ('v_cmpx_ge_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ge_u64' : OpCode ('v_cmpx_ge_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_gt_f16' : OpCode ('v_cmpx_gt_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_gt_f32' : OpCode ('v_cmpx_gt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_gt_f64' : OpCode ('v_cmpx_gt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_gt_i16' : OpCode ('v_cmpx_gt_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_gt_i32' : OpCode ('v_cmpx_gt_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_gt_i64' : OpCode ('v_cmpx_gt_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_gt_u16' : OpCode ('v_cmpx_gt_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_gt_u32' : OpCode ('v_cmpx_gt_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_gt_u64' : OpCode ('v_cmpx_gt_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_le_f16' : OpCode ('v_cmpx_le_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_le_f32' : OpCode ('v_cmpx_le_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_le_f64' : OpCode ('v_cmpx_le_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_le_i16' : OpCode ('v_cmpx_le_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_le_i32' : OpCode ('v_cmpx_le_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_le_i64' : OpCode ('v_cmpx_le_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_le_u16' : OpCode ('v_cmpx_le_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_le_u32' : OpCode ('v_cmpx_le_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_le_u64' : OpCode ('v_cmpx_le_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lg_f16' : OpCode ('v_cmpx_lg_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lg_f32' : OpCode ('v_cmpx_lg_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lg_f64' : OpCode ('v_cmpx_lg_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lt_f16' : OpCode ('v_cmpx_lt_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lt_f32' : OpCode ('v_cmpx_lt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lt_f64' : OpCode ('v_cmpx_lt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lt_i16' : OpCode ('v_cmpx_lt_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lt_i32' : OpCode ('v_cmpx_lt_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lt_i64' : OpCode ('v_cmpx_lt_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lt_u16' : OpCode ('v_cmpx_lt_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lt_u32' : OpCode ('v_cmpx_lt_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_lt_u64' : OpCode ('v_cmpx_lt_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ne_i16' : OpCode ('v_cmpx_ne_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ne_i32' : OpCode ('v_cmpx_ne_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ne_i64' : OpCode ('v_cmpx_ne_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ne_u16' : OpCode ('v_cmpx_ne_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ne_u32' : OpCode ('v_cmpx_ne_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ne_u64' : OpCode ('v_cmpx_ne_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_neq_f16' : OpCode ('v_cmpx_neq_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_neq_f32' : OpCode ('v_cmpx_neq_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_neq_f64' : OpCode ('v_cmpx_neq_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nge_f16' : OpCode ('v_cmpx_nge_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nge_f32' : OpCode ('v_cmpx_nge_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nge_f64' : OpCode ('v_cmpx_nge_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ngt_f16' : OpCode ('v_cmpx_ngt_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ngt_f32' : OpCode ('v_cmpx_ngt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_ngt_f64' : OpCode ('v_cmpx_ngt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nle_f16' : OpCode ('v_cmpx_nle_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nle_f32' : OpCode ('v_cmpx_nle_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nle_f64' : OpCode ('v_cmpx_nle_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nlg_f16' : OpCode ('v_cmpx_nlg_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nlg_f32' : OpCode ('v_cmpx_nlg_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nlg_f64' : OpCode ('v_cmpx_nlg_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nlt_f16' : OpCode ('v_cmpx_nlt_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nlt_f32' : OpCode ('v_cmpx_nlt_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_nlt_f64' : OpCode ('v_cmpx_nlt_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_o_f16' : OpCode ('v_cmpx_o_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_o_f32' : OpCode ('v_cmpx_o_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_o_f64' : OpCode ('v_cmpx_o_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_t_i16' : OpCode ('v_cmpx_t_i16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_t_i32' : OpCode ('v_cmpx_t_i32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_t_i64' : OpCode ('v_cmpx_t_i64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_t_u16' : OpCode ('v_cmpx_t_u16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_t_u32' : OpCode ('v_cmpx_t_u32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_t_u64' : OpCode ('v_cmpx_t_u64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_tru_f16' : OpCode ('v_cmpx_tru_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_tru_f32' : OpCode ('v_cmpx_tru_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_tru_f64' : OpCode ('v_cmpx_tru_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_u_f16' : OpCode ('v_cmpx_u_f16', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_u_f32' : OpCode ('v_cmpx_u_f32', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cmpx_u_f64' : OpCode ('v_cmpx_u_f64', {0}, {1, 2}, InstructionClass.VOPC, 0, None),
    'v_cndmask_b32' : OpCode ('v_cndmask_b32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_cos_f16' : OpCode ('v_cos_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cos_f32' : OpCode ('v_cos_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cubeid_f32' : OpCode ('v_cubeid_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cubema_f32' : OpCode ('v_cubema_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cubesc_f32' : OpCode ('v_cubesc_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cubetc_f32' : OpCode ('v_cubetc_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cvt_f16_f32' : OpCode ('v_cvt_f16_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f16_i16' : OpCode ('v_cvt_f16_i16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f16_u16' : OpCode ('v_cvt_f16_u16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f32_f16' : OpCode ('v_cvt_f32_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f32_f64' : OpCode ('v_cvt_f32_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f32_i32' : OpCode ('v_cvt_f32_i32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f32_u32' : OpCode ('v_cvt_f32_u32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f32_ubyte0' : OpCode ('v_cvt_f32_ubyte0', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f32_ubyte1' : OpCode ('v_cvt_f32_ubyte1', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f32_ubyte2' : OpCode ('v_cvt_f32_ubyte2', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f32_ubyte3' : OpCode ('v_cvt_f32_ubyte3', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f64_f32' : OpCode ('v_cvt_f64_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f64_i32' : OpCode ('v_cvt_f64_i32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_f64_u32' : OpCode ('v_cvt_f64_u32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_flr_i32_f32' : OpCode ('v_cvt_flr_i32_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_i16_f16' : OpCode ('v_cvt_i16_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_i32_f32' : OpCode ('v_cvt_i32_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_i32_f64' : OpCode ('v_cvt_i32_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_norm_i16_f16' : OpCode ('v_cvt_norm_i16_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_norm_u16_f16' : OpCode ('v_cvt_norm_u16_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_off_f32_i4' : OpCode ('v_cvt_off_f32_i4', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_pk_i16_i32' : OpCode ('v_cvt_pk_i16_i32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cvt_pk_u16_u32' : OpCode ('v_cvt_pk_u16_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cvt_pk_u8_f32' : OpCode ('v_cvt_pk_u8_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cvt_pkaccum_u8_f32' : OpCode ('v_cvt_pkaccum_u8_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cvt_pknorm_i16_f16' : OpCode ('v_cvt_pknorm_i16_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cvt_pknorm_i16_f32' : OpCode ('v_cvt_pknorm_i16_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cvt_pknorm_u16_f16' : OpCode ('v_cvt_pknorm_u16_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cvt_pknorm_u16_f32' : OpCode ('v_cvt_pknorm_u16_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cvt_pkrtz_f16_f32' : OpCode ('v_cvt_pkrtz_f16_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_cvt_rpi_i32_f32' : OpCode ('v_cvt_rpi_i32_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_u16_f16' : OpCode ('v_cvt_u16_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_u32_f32' : OpCode ('v_cvt_u32_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_cvt_u32_f64' : OpCode ('v_cvt_u32_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_div_fixup_f16' : OpCode ('v_div_fixup_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_div_fixup_f32' : OpCode ('v_div_fixup_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_div_fixup_f64' : OpCode ('v_div_fixup_f64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_div_fixup_legacy_f16' : OpCode ('v_div_fixup_legacy_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_div_fmas_f32' : OpCode ('v_div_fmas_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_div_fmas_f64' : OpCode ('v_div_fmas_f64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_div_scale_f32' : OpCode ('v_div_scale_f32', {0, 1}, {2, 3, 4}, InstructionClass.VOP3, 0, None),
    'v_div_scale_f64' : OpCode ('v_div_scale_f64', {0, 1}, {2, 3, 4}, InstructionClass.VOP3, 0, None),
    'v_dot2_f32_f16' : OpCode ('v_dot2_f32_f16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_dot2_i32_i16' : OpCode ('v_dot2_i32_i16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_dot2_i32_i16_i8' : OpCode ('v_dot2_i32_i16_i8', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_dot2_u32_u16' : OpCode ('v_dot2_u32_u16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_dot2_u32_u16_u8' : OpCode ('v_dot2_u32_u16_u8', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_dot2c_f32_f16' : OpCode ('v_dot2c_f32_f16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_dot2c_i32_i16' : OpCode ('v_dot2c_i32_i16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_dot4_i32_i8' : OpCode ('v_dot4_i32_i8', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_dot4_u32_u8' : OpCode ('v_dot4_u32_u8', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_dot4c_i32_i8' : OpCode ('v_dot4c_i32_i8', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_dot8_i32_i4' : OpCode ('v_dot8_i32_i4', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_dot8_u32_u4' : OpCode ('v_dot8_u32_u4', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_dot8c_i32_i4' : OpCode ('v_dot8c_i32_i4', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_exp_f16' : OpCode ('v_exp_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_exp_f32' : OpCode ('v_exp_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_exp_legacy_f32' : OpCode ('v_exp_legacy_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_ffbh_i32' : OpCode ('v_ffbh_i32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_ffbh_u32' : OpCode ('v_ffbh_u32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_ffbl_b32' : OpCode ('v_ffbl_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_floor_f16' : OpCode ('v_floor_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_floor_f32' : OpCode ('v_floor_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_floor_f64' : OpCode ('v_floor_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_fma_f16' : OpCode ('v_fma_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_fma_f32' : OpCode ('v_fma_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_fma_f64' : OpCode ('v_fma_f64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_fma_legacy_f16' : OpCode ('v_fma_legacy_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_fmac_f32' : OpCode ('v_fmac_f32', {0}, {0, 1, 2}, InstructionClass.VOP2, 0, None),
    'v_fract_f16' : OpCode ('v_fract_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_fract_f32' : OpCode ('v_fract_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_fract_f64' : OpCode ('v_fract_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_frexp_exp_i16_f16' : OpCode ('v_frexp_exp_i16_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_frexp_exp_i32_f32' : OpCode ('v_frexp_exp_i32_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_frexp_exp_i32_f64' : OpCode ('v_frexp_exp_i32_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_frexp_mant_f16' : OpCode ('v_frexp_mant_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_frexp_mant_f32' : OpCode ('v_frexp_mant_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_frexp_mant_f64' : OpCode ('v_frexp_mant_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_interp_mov_f32' : OpCode ('v_interp_mov_f32', {0}, {1, 2}, InstructionClass.VINTRP, 0, None),
    'v_interp_p1_f32' : OpCode ('v_interp_p1_f32', {0}, {1, 2}, InstructionClass.VINTRP, 0, None),
    'v_interp_p1ll_f16' : OpCode ('v_interp_p1ll_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_interp_p1lv_f16' : OpCode ('v_interp_p1lv_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_interp_p2_f16' : OpCode ('v_interp_p2_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_interp_p2_f32' : OpCode ('v_interp_p2_f32', {0}, {1, 2}, InstructionClass.VINTRP, 0, None),
    'v_interp_p2_legacy_f16' : OpCode ('v_interp_p2_legacy_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_ldexp_f16' : OpCode ('v_ldexp_f16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_ldexp_f32' : OpCode ('v_ldexp_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_ldexp_f64' : OpCode ('v_ldexp_f64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_lerp_u8' : OpCode ('v_lerp_u8', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_log_clamp_f32' : OpCode ('v_log_clamp_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_log_f16' : OpCode ('v_log_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_log_f32' : OpCode ('v_log_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_log_legacy_f32' : OpCode ('v_log_legacy_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_lshl_add_u32' : OpCode ('v_lshl_add_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_lshl_b32' : OpCode ('v_lshl_b32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_lshl_b64' : OpCode ('v_lshl_b64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_lshl_or_b32' : OpCode ('v_lshl_or_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_lshlrev_b16' : OpCode ('v_lshlrev_b16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_lshlrev_b32' : OpCode ('v_lshlrev_b32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_lshlrev_b64' : OpCode ('v_lshlrev_b64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_lshr_b32' : OpCode ('v_lshr_b32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_lshr_b64' : OpCode ('v_lshr_b64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_lshrrev_b16' : OpCode ('v_lshrrev_b16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_lshrrev_b32' : OpCode ('v_lshrrev_b32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_lshrrev_b64' : OpCode ('v_lshrrev_b64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mac_f16' : OpCode ('v_mac_f16', {0}, {0, 1, 2}, InstructionClass.VOP2, 0, None),
    'v_mac_f32' : OpCode ('v_mac_f32', {0}, {0, 1, 2}, InstructionClass.VOP2, 0, None),
    'v_mac_legacy_f32' : OpCode ('v_mac_legacy_f32', {0}, {0, 1, 2}, InstructionClass.VOP3, 0, None),
    'v_mad_f16' : OpCode ('v_mad_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_f32' : OpCode ('v_mad_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_i16' : OpCode ('v_mad_i16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_i32_i16' : OpCode ('v_mad_i32_i16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_i32_i24' : OpCode ('v_mad_i32_i24', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_i64_i32' : OpCode ('v_mad_i64_i32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_legacy_f16' : OpCode ('v_mad_legacy_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_legacy_f32' : OpCode ('v_mad_legacy_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_legacy_i16' : OpCode ('v_mad_legacy_i16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_legacy_u16' : OpCode ('v_mad_legacy_u16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_mix_f32' : OpCode ('v_mad_mix_f32', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_mad_mixhi_f16' : OpCode ('v_mad_mixhi_f16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_mad_mixlo_f16' : OpCode ('v_mad_mixlo_f16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_mad_u16' : OpCode ('v_mad_u16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_u32_u16' : OpCode ('v_mad_u32_u16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_u32_u24' : OpCode ('v_mad_u32_u24', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mad_u64_u32' : OpCode ('v_mad_u64_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_madak_f16' : OpCode ('v_madak_f16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_madak_f32' : OpCode ('v_madak_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_madmk_f16' : OpCode ('v_madmk_f16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_madmk_f32' : OpCode ('v_madmk_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_max3_f16' : OpCode ('v_max3_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_max3_f32' : OpCode ('v_max3_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_max3_i16' : OpCode ('v_max3_i16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_max3_i32' : OpCode ('v_max3_i32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_max3_u16' : OpCode ('v_max3_u16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_max3_u32' : OpCode ('v_max3_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_max_f16' : OpCode ('v_max_f16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_max_f32' : OpCode ('v_max_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_max_f64' : OpCode ('v_max_f64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_max_i16' : OpCode ('v_max_i16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_max_i32' : OpCode ('v_max_i32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_max_legacy_f32' : OpCode ('v_max_legacy_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_max_u16' : OpCode ('v_max_u16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_max_u32' : OpCode ('v_max_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_mbcnt_hi_u32_b32' : OpCode ('v_mbcnt_hi_u32_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mbcnt_lo_u32_b32' : OpCode ('v_mbcnt_lo_u32_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_med3_f16' : OpCode ('v_med3_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_med3_f32' : OpCode ('v_med3_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_med3_i16' : OpCode ('v_med3_i16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_med3_i32' : OpCode ('v_med3_i32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_med3_u16' : OpCode ('v_med3_u16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_med3_u32' : OpCode ('v_med3_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_min3_f16' : OpCode ('v_min3_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_min3_f32' : OpCode ('v_min3_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_min3_i16' : OpCode ('v_min3_i16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_min3_i32' : OpCode ('v_min3_i32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_min3_u16' : OpCode ('v_min3_u16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_min3_u32' : OpCode ('v_min3_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_min_f16' : OpCode ('v_min_f16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_min_f32' : OpCode ('v_min_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_min_f64' : OpCode ('v_min_f64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_min_i16' : OpCode ('v_min_i16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_min_i32' : OpCode ('v_min_i32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_min_legacy_f32' : OpCode ('v_min_legacy_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_min_u16' : OpCode ('v_min_u16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_min_u32' : OpCode ('v_min_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_mov_b32' : OpCode ('v_mov_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_mov_fed_b32' : OpCode ('v_mov_fed_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_mov_prsv_b32' : OpCode ('v_mov_prsv_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_movreld_b32' : OpCode ('v_movreld_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_movrels_b32' : OpCode ('v_movrels_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_movrelsd_b32' : OpCode ('v_movrelsd_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_mqsad_pk_u16_u8' : OpCode ('v_mqsad_pk_u16_u8', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mqsad_u32_u8' : OpCode ('v_mqsad_u32_u8', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mqsad_u8' : OpCode ('v_mqsad_u8', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_msad_u8' : OpCode ('v_msad_u8', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mul_f16' : OpCode ('v_mul_f16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_mul_f32' : OpCode ('v_mul_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_mul_f64' : OpCode ('v_mul_f64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mul_hi_i32' : OpCode ('v_mul_hi_i32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mul_hi_i32_i24' : OpCode ('v_mul_hi_i32_i24', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_mul_hi_u32' : OpCode ('v_mul_hi_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mul_hi_u32_u24' : OpCode ('v_mul_hi_u32_u24', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_mul_i32_i24' : OpCode ('v_mul_i32_i24', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_mul_legacy_f32' : OpCode ('v_mul_legacy_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_mul_lo_i32' : OpCode ('v_mul_lo_i32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mul_lo_u16' : OpCode ('v_mul_lo_u16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_mul_lo_u32' : OpCode ('v_mul_lo_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_mul_u32_u24' : OpCode ('v_mul_u32_u24', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_mullit_f32' : OpCode ('v_mullit_f32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_nop' : OpCode ('v_nop', {}, {}, InstructionClass.VOP1, 0, None),
    'v_not_b32' : OpCode ('v_not_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_or3_b32' : OpCode ('v_or3_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_or_b32' : OpCode ('v_or_b32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_pack_b32_f16' : OpCode ('v_pack_b32_f16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_perm_b32' : OpCode ('v_perm_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_pk_add_f16' : OpCode ('v_pk_add_f16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_add_i16' : OpCode ('v_pk_add_i16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_add_u16' : OpCode ('v_pk_add_u16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_ashrrev_i16' : OpCode ('v_pk_ashrrev_i16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_fma_f16' : OpCode ('v_pk_fma_f16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_fmac_f16' : OpCode ('v_pk_fmac_f16', {0}, {0, 1, 2}, InstructionClass.VOP2, 0, None),
    'v_pk_lshlrev_b16' : OpCode ('v_pk_lshlrev_b16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_lshrrev_b16' : OpCode ('v_pk_lshrrev_b16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_mad_i16' : OpCode ('v_pk_mad_i16', {0}, {0, 1, 2}, InstructionClass.VOP3P, 0, None),
    'v_pk_mad_u16' : OpCode ('v_pk_mad_u16', {0}, {0, 1, 2}, InstructionClass.VOP3P, 0, None),
    'v_pk_max_f16' : OpCode ('v_pk_max_f16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_max_i16' : OpCode ('v_pk_max_i16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_max_u16' : OpCode ('v_pk_max_u16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_min_f16' : OpCode ('v_pk_min_f16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_min_i16' : OpCode ('v_pk_min_i16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_min_u16' : OpCode ('v_pk_min_u16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_mul_f16' : OpCode ('v_pk_mul_f16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_mul_lo_u16' : OpCode ('v_pk_mul_lo_u16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_sub_i16' : OpCode ('v_pk_sub_i16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_pk_sub_u16' : OpCode ('v_pk_sub_u16', {0}, {1, 2, 3}, InstructionClass.VOP3P, 0, None),
    'v_qsad_pk_u16_u8' : OpCode ('v_qsad_pk_u16_u8', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_qsad_u8' : OpCode ('v_qsad_u8', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_rcp_clamp_f32' : OpCode ('v_rcp_clamp_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rcp_clamp_f64' : OpCode ('v_rcp_clamp_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rcp_f16' : OpCode ('v_rcp_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rcp_f32' : OpCode ('v_rcp_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rcp_f64' : OpCode ('v_rcp_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rcp_iflag_f32' : OpCode ('v_rcp_iflag_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rcp_legacy_f32' : OpCode ('v_rcp_legacy_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_readfirstlane_b32' : OpCode ('v_readfirstlane_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_readlane_b32' : OpCode ('v_readlane_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_readlane_regrd_b32' : OpCode ('v_readlane_regrd_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_rndne_f16' : OpCode ('v_rndne_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rndne_f32' : OpCode ('v_rndne_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rndne_f64' : OpCode ('v_rndne_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rsq_clamp_f32' : OpCode ('v_rsq_clamp_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rsq_clamp_f64' : OpCode ('v_rsq_clamp_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rsq_f16' : OpCode ('v_rsq_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rsq_f32' : OpCode ('v_rsq_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rsq_f64' : OpCode ('v_rsq_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_rsq_legacy_f32' : OpCode ('v_rsq_legacy_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_sad_hi_u8' : OpCode ('v_sad_hi_u8', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_sad_u16' : OpCode ('v_sad_u16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_sad_u32' : OpCode ('v_sad_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_sad_u8' : OpCode ('v_sad_u8', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_sat_pk_u8_i16' : OpCode ('v_sat_pk_u8_i16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_screen_partition_4se_b32' : OpCode ('v_screen_partition_4se_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_sin_f16' : OpCode ('v_sin_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_sin_f32' : OpCode ('v_sin_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_sqrt_f16' : OpCode ('v_sqrt_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_sqrt_f32' : OpCode ('v_sqrt_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_sqrt_f64' : OpCode ('v_sqrt_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_sub_co_u32' : OpCode ('v_sub_co_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_sub_f16' : OpCode ('v_sub_f16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_sub_f32' : OpCode ('v_sub_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_sub_i16' : OpCode ('v_sub_i16', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_sub_i32' : OpCode ('v_sub_i32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_sub_u16' : OpCode ('v_sub_u16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_sub_u32' : OpCode ('v_sub_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_subb_co_u32' : OpCode ('v_subb_co_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_subb_u32' : OpCode ('v_subb_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_subbrev_co_u32' : OpCode ('v_subbrev_co_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_subbrev_u32' : OpCode ('v_subbrev_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_subrev_co_u32' : OpCode ('v_subrev_co_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_subrev_f16' : OpCode ('v_subrev_f16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_subrev_f32' : OpCode ('v_subrev_f32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_subrev_i32' : OpCode ('v_subrev_i32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_subrev_u16' : OpCode ('v_subrev_u16', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_subrev_u32' : OpCode ('v_subrev_u32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_swap_b32' : OpCode ('v_swap_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_trig_preop_f64' : OpCode ('v_trig_preop_f64', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_trunc_f16' : OpCode ('v_trunc_f16', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_trunc_f32' : OpCode ('v_trunc_f32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_trunc_f64' : OpCode ('v_trunc_f64', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_writelane_b32' : OpCode ('v_writelane_b32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_writelane_regwr_b32' : OpCode ('v_writelane_regwr_b32', {0}, {1}, InstructionClass.VOP1, 0, None),
    'v_xad_u32' : OpCode ('v_xad_u32', {0}, {1, 2, 3}, InstructionClass.VOP3, 0, None),
    'v_xnor_b32' : OpCode ('v_xnor_b32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
    'v_xor_b32' : OpCode ('v_xor_b32', {0}, {1, 2}, InstructionClass.VOP2, 0, None),
}
