Radeon GPU Analyzer 2.7 Release Notes
=====================================
Highlights
==========
-	Compile and analyze shaders and kernels for the RDNA3™ architecture (gfx1100), even without a physical RDNA3™ card installed on your system.
-	Jump to areas in your shaders and kernels which have maximum VGPR pressure using the RGA GUI application. After successfully compiling your shader, use:
    o	Edit->Go to next maximum VGPR pressure line (Ctrl+F4), or:
    o	Right-click on any ISA disassembly line -> Go to next maximum VGPR pressure line (Ctrl+F4).
-	DirectX®11 mode (-s dx11) is now an offline mode and works regardless of the installed driver. Support in this mode was limited to VS, PS and CS.
-	Updates to Vulkan and OpenGL® backend components.
-	OpenCL™ mode now uses an updated version of AMD’s LLVM-based Lightning Compiler.

Notes: 
-	AMDIL input is no longer supported by the tool with the new DX11 mode.
-	On Ubuntu, the minimum required OS version is Ubuntu 22.04.


Known Issues
============
Vulkan Live Driver Mode
-----------------------
-	Certain 16-bit instruction may appear as “Unknown” in the disassembly.
-	Source to disassembly correlation is not supported by AMD's shader compiler and is therefore not supported in the UI.
-	Keyboard navigation is not supported from some views in the GUI application.
-	The RGA layer is a beta feature. It fails to extract the shaders and pipeline state from certain Vulkan apps.
-	Notifications about the fact that modified SPIR-V binary does not match the disassembly will not appear for loaded projects (in case that you changed the SPIR-V code, did not build and re-loaded the project).
-	Cycle estimate for certain VALU instructions appears as “Varies” instead of 4.
-	Linux only: attempt to compile shaders with invalid pipeline state may result in very long compilation time. This is going to be addressed by an upcoming driver release.
-	Linux only: if no amdgpu-pro driver is installed on the system, the bundled driver will only support targets up to RDNA2.

Offline OpenCL Mode
-------------------
-	OpenCL C++ kernels are not yet supported by the Lightning Compiler.
-	Cycle estimate for certain VALU instructions appears as “Varies” instead of 4.

OpenGL Mode
-----------
Resource usage statistics for OpenGL mode only displays usage of SGPRs and VGPRs.
=======
-	Cycle estimate for certain VALU instructions appears as “Varies” instead of 4.

DirectX 12 Mode
---------------
-	Live register analysis & CFG generation require using the --isa option to generate ISA disassembly. 
-	On Windows 11, Hull shader AMDIL disassembly contains a trail of a few garbage characters.

Vulkan Offline Modes (vk-offline, vk-spv-offline, vk-spv-txt-offline)
---------------------------------------------------------------------
SPIR-V support limitations:
a. The Vulkan Offline modes currently only support the following SPIR-V capabilities:
CapabilityMatrix
CapabilityShader
CapabilityGeometry
CapabilityTessellation
CapabilityFloat16
CapabilityFloat64
CapabilityInt64
CapabilityInt64Atomics
CapabilityGroups
CapabilityAtomicStorage
CapabilityInt16
CapabilityTessellationPointSize
CapabilityGeometryPointSize
CapabilityImageGatherExtended
CapabilityStorageImageMultisample
CapabilityUniformBufferArrayDynamicIndexing
CapabilitySampledImageArrayDynamicIndexing
CapabilityStorageBufferArrayDynamicIndexing
CapabilityStorageImageArrayDynamicIndexing
CapabilityClipDistance
CapabilityCullDistance
CapabilityImageCubeArray
CapabilitySampleRateShading
CapabilityImageRect
CapabilitySampledRect
CapabilityInt8
CapabilityInputAttachment
CapabilitySparseResidency
CapabilityMinLod
CapabilitySampled1D
CapabilityImage1D
CapabilitySampledCubeArray
CapabilitySampledBuffer
CapabilityImageBuffer
CapabilityImageMSArray
CapabilityStorageImageExtendedFormats
CapabilityImageQuery
CapabilityDerivativeControl
CapabilityInterpolationFunction
CapabilityTransformFeedback
CapabilityGeometryStreams
CapabilityStorageImageReadWithoutFormat
CapabilityStorageImageWriteWithoutFormat
CapabilityMultiViewport
CapabilitySubgroupDispatch
CapabilityNamedBarrier
CapabilityPipeStorage
CapabilityGroupNonUniform
CapabilityGroupNonUniformVote
CapabilityGroupNonUniformArithmetic
CapabilityGroupNonUniformBallot
CapabilityGroupNonUniformShuffle
CapabilityGroupNonUniformShuffleRelative
CapabilityGroupNonUniformClustered
CapabilityGroupNonUniformQuad
CapabilitySubgroupBallotKHR
CapabilityDrawParameters
CapabilitySubgroupVoteKHR
CapabilityStorageBuffer16BitAccess
CapabilityStorageUniformBufferBlock16
CapabilityStorageUniform16
CapabilityUniformAndStorageBuffer16BitAccess
CapabilityStorageInputOutput16
CapabilityDeviceGroup
CapabilityMultiView
CapabilityVariablePointersStorageBuffer
CapabilityVariablePointers
CapabilitySampleMaskPostDepthCoverage
CapabilityStorageBuffer8BitAccess
CapabilityUniformAndStorageBuffer8BitAccess
CapabilityDenormPreserve
CapabilityDenormFlushToZero
CapabilitySignedZeroInfNanPreserve
CapabilityRoundingModeRTE
CapabilityRoundingModeRTZ
CapabilityFloat16ImageAMD
CapabilityImageGatherBiasLodAMD
CapabilityFragmentMaskAMD
CapabilityStencilExportEXT
CapabilityImageReadWriteLodAMD
CapabilityInt64ImageEXT
CapabilityShaderClockKHR
CapabilityShaderViewportIndexLayerEXT
CapabilityFragmentShadingRateKHR
CapabilityFragmentDensityEXT
CapabilityShaderNonUniformEXT
CapabilityRuntimeDescriptorArrayEXT
CapabilityInputAttachmentArrayDynamicIndexingEXT
CapabilityUniformTexelBufferArrayDynamicIndexingEXT
CapabilityStorageTexelBufferArrayDynamicIndexingEXT
CapabilityUniformBufferArrayNonUniformIndexingEXT
CapabilitySampledImageArrayNonUniformIndexingEXT
CapabilityStorageBufferArrayNonUniformIndexingEXT
CapabilityStorageImageArrayNonUniformIndexingEXT
CapabilityUniformTexelBufferArrayNonUniformIndexingEXT
CapabilityStorageTexelBufferArrayNonUniformIndexingEXT
CapabilityVulkanMemoryModel
CapabilityVulkanMemoryModelKHR
CapabilityVulkanMemoryModelDeviceScope
CapabilityVulkanMemoryModelDeviceScopeKHR
CapabilityPhysicalStorageBufferAddresses
CapabilityPhysicalStorageBufferAddressesEXT
CapabilityDemoteToHelperInvocationEXT
CapabilityAtomicFloat32MinMaxEXT
CapabilityAtomicFloat64MinMaxEXT


b. The Vulkan Offline modes currently only support the following extensions:  
SPV_KHR_shader_ballot
SPV_KHR_subgroup_vote
SPV_KHR_device_group
SPV_KHR_multiview
SPV_KHR_shader_draw_parameters
SPV_KHR_16bit_storage
SPV_KHR_storage_buffer_storage_class
SPV_KHR_8bit_storage
SPV_KHR_variable_pointers
SPV_KHR_float_controls
SPV_KHR_shader_clock
SPV_KHR_vulkan_memory_model
SPV_KHR_post_depth_coverage
SPV_KHR_non_semantic_info
SPV_KHR_physical_storage_buffer
SPV_KHR_terminate_invocation
SPV_KHR_FRAGMENT_SHADING_RATE
SPV_KHR_workgroup_memory_explicit_layout
SPV_EXT_nonuniform_qualifier
SPV_EXT_shader_stencil_export
SPV_EXT_shader_viewport_index_layer
SPV_EXT_demote_to_helper_invocation
SPV_EXT_shader_image_atomic_int64
SPV_EXT_mesh_shader
SPV_AMD_shader_ballot
SPV_AMD_shader_trinary_minmax
SPV_AMD_shader_explicit_vertex_parameter
SPV_AMD_gcn_shader
SPV_AMD_gpu_shader_half_float
SPV_AMD_texture_gather_bias_lod
SPV_AMD_gpu_shader_int16
SPV_AMD_shader_fragment_mask
SPV_AMD_shader_image_load_store_lod
SPV_AMD_shader_texel_buffer_explicit_format
SPV_AMD_property_id_attachment
SPV_AMD_anisotropic_lod_compensation
SPV_ARB_shader_ballot
SPV_GOOGLE_decorate_string
SPV_GOOGLE_hlsl_functionality1
SPV_GOOGLE_user_type
SPV_NV_cooperative_matrix SPV_GOOGLE_user_type


GUI Application
---------------
-	VGPR Pressure feature: certain instructions (image_* in particular) may report more live registers than actually used.
-	“Correlation Disabled” notification in the source code editor is not being saved for projects after they were closed.
-	Certain SALU instructions are being misclassified as VALU instructions. 
-	Certain GDS instructions are being misclassified as SALU.
-	Changing disassembly columns can be sluggish on certain systems in projects with multiple .cl files.
-	On systems with default Unicode path for the RGA projects folder, the tool will not be able to save files. A workaround has been provided in version 2.6.1 (allowing the user to change the folder in which projects are saved).

Notes for OpenCL Mode Users 
===========================
The Offline OpenCL mode uses the Lightning Compiler package that ships with RGA, which is based on clang.
As of version 2.0, RGA allows developers to replace the Lightning Compiler package that ships with the product with a user-provided LLVM-based package. For more information, see the Radeon GPU Analyzer GUI app's help manual, or run the command line tool with –s opencl –h as arguments (look for the “Alternative OpenCL Lightning Compiler” section).

System Requirements
===================
It is generally recommended to use RGA with the latest Radeon Software version. Specifically, to target the RDNA architecture, the latest Radeon Software version is required (except for all Vulkan® modes, OpenCL mode, OpenGL mode and DX11 mode which are independent of the driver).

Vulkan Mode
-----------
To use the installed driver in Vulkan mode:
a.	Vulkan SDK 1.1.97.0 or later is required.
b.	Latest Adrenalin or amdgpu-pro driver is required.

Vulkan Offline Modes (vk-offline, vk-spv-offline, vk-spv-txt-offline)
---------------------------------------------------------------------
All Vulkan offline modes (vk-offline, vk-spv-offline and vk-spv-txt-offline) are independent of the installed driver and graphics hardware and should work on any x86-based system.

DirectX 12
----------
It is recommended to use the latest Adrenalin drivers for the best experience in DirectX 12 and DirectX 11 modes.

DirectX 11
----------
DirectX 11 mode (-s dx11) is independent of the installed driver and graphics hardware and should work on any x86-based system.

OpenCL Mode
-----------
OpenCL mode (-s opencl) is independent of the installed driver and graphics hardware and should work on any x86-based system.

OpenGL Mode
-----------
OpenGL mode (-s opengl) is independent of the installed driver and graphics hardware and should work on any x86-based system.

